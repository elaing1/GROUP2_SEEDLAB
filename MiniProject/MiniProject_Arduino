#include <Wire.h>
#define SLAVE_ADDRESS 0x04
#include <Encoder.h>
#include "DualMC33926MotorShield.h"

DualMC33926MotorShield md;


//array of bytes for count to be sent to pi
byte data[32] = {0};
//array of ints for the receieved set theta
int setquad[32] = {0};

double setTheta = 0;
//int count = 0;

//Setting the encoder pins
int pinA = 2;
int pinB = 3;

//Setting the wheels as an encoder obeject
Encoder wheel(pinA,pinB);

//PI controller values
const double Kp = 5.22598587367051;
const double Ki = 0.589602109382692;

//Time
int currentTime = 0;

//Encoder values and theta
int count =0;
double theta = 0;

//Feedback loop values
double I = 0;
double e_past = 0;
double e =0;
int Ts = 0;
int u = 0;
int Tc = currentTime;

//Function to spin motor
void spinMotor(int PWM){

  if (PWM > 0){
    analogWrite(10,PWM);
    digitalWrite(8,0);
  }
  if(PWM < 0){
    analogWrite(10,PWM);
    digitalWrite(8,1);
  }
}

//Recieves data from PI
void receiveData(int intCount) {
  // Read the data from the Raspberry Pi
  int i=0;
  while (Wire.available()) {
    setquad[i] = Wire.read();
    i++; 
  } 
  //chnages the quadrant read from the pi to the angle desired
  if (setquad[1] == 1){
    setTheta = 0;
  }
  // pi/2
  if (setquad[1] == 2){
    setTheta = 1.57;
  }
  // pi
  if (setquad[1] == 3){
    setTheta = 3.14;
  }
  // 3pi/2
  if (setquad[1] == 4){
    setTheta = 4.71;
  }
  //Serial.print(setTheta);
}

//sends the position back to the rpi
void sendData(){
  //Serial.println(data[0]);
  //Serial.println(data[1]);
  Wire.write(data, 2);
}

void setup() {
  // put your setup code here, to run once:

//Setting pins
pinMode(pinA, INPUT_PULLUP);
pinMode(pinB, INPUT_PULLUP);

pinMode(4,OUTPUT);
pinMode(7,OUTPUT);
pinMode(8,OUTPUT);
pinMode(9,OUTPUT);
pinMode(10,OUTPUT);
pinMode(12,INPUT);

//Start serial monitor
Serial.begin(9600);

//initialize motor
md.init();

// put your setup code here, to run once:
  pinMode(13, OUTPUT);
  Serial.begin(9600); // start serial for output
  // initialize i2c as slave
  Wire.begin(SLAVE_ADDRESS);
  // declare the ledPin as an OUTPUT:
  //pinMode(ledPin, OUTPUT);
  // define callbacks for i2c communication
  Wire.onReceive(receiveData);
  Wire.onRequest(sendData);
  Serial.println("Ready!");

}

void loop() {
  // put your main code here, to run repeatedly:

//set current time
currentTime = millis();
Tc = currentTime;



while (1){

  //read in referrence 
  count = wheel.read();
  theta = -double(count)/3210 * 2*PI;
  
  //LCD screen i think
  //Read current position of wheel and bitshift to send to rpi
  //Can use count or wheel.read() i believe (Note: I do not have the encoder library included). Im converting to angle on rpi
  data[0] = ((abs(count) >> 8) & 255); //bitshift to send high 8 bits
  data[1] = (abs(count) & 255); //send low 8 bits
  //data[0] = ((count >> 8) & 255); //bitshift to send high 8 bits
  //data[1] = (count & 255); //send low 8 bits

  
  //current time
  currentTime = millis();
  
  //calculate  e=setTheta-y
  e=setTheta-theta;
  //claculating the integral
  I=Ts*e;

  //calculating the PWM output
  u = 100*Kp*e +Ki*I;
  //spinning motor
  spinMotor(u);
  //setting new times i guess
  Ts = currentTime - Tc;
  Tc = currentTime;

  //Print Statements
  Serial.print(count);
  Serial.print("\t");
  Serial.println(theta);
//  Serial.print("\t");
//  Serial.print("\t");
//  Serial.print(u);
//  Serial.print("\t");
//  Serial.println(currentTime);
  

//  Serial.print("Error= ");
//  Serial.print(e);
//  Serial.print("\t");
//  Serial.print("PWM= ");
//  Serial.println(u);
  
}




}
